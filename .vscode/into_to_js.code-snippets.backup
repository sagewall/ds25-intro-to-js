{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"ArcGIS Embeddable Components Script": {
		"prefix": "dEmbedScript",
		"body": [
			"<script",
			"  type=\"module\"",
			"  src=\"https://js.arcgis.com/embeddable-components/4.32/arcgis-embeddable-components.esm.js\"",
			"></script>"
		],
		"description": "Insert ArcGIS embeddable components script"
	},
	"ArcGIS Embedded Map": {
		"prefix": "dEmbedMap",
		"body": [
			"<!-- Add custom element to <body> of your page -->",
			"<!-- Note: a height of 600px as a minimum is ideal -->",
			"<arcgis-embedded-map",
			"  style=\"height: 600px; width: 800px\"",
			"  item-id=\"237b9584339446a0b56317b5962a4971\"",
			"  legend-enabled",
			">",
			"</arcgis-embedded-map>"
		],
		"description": "Insert an ArcGIS embedded map"
	},
	"Map Item ID": {
		"prefix": "dItemId",
		"body": [
			"237b9584339446a0b56317b5962a4971"
		],
		"description": "Insert an ArcGIS embedded map"
	},
	"ArcGIS CSS Imports": {
		"prefix": "dCSSImports",
		"body": [
			"@import \"@arcgis/core/assets/esri/themes/light/main.css\";",
			"@import \"@arcgis/map-components/arcgis-map-components/arcgis-map-components.css\";",
			"@import \"@esri/calcite-components/calcite/calcite.css\";"
		],
		"description": "Insert ArcGIS CSS imports"
	},
	"HTML Body Styles": {
		"prefix": "dCSSHTMLBodyStyles",
		"body": [
			"html,",
			"body {",
			"  height: 100%;",
			"  margin: 0;",
			"}"
		],
		"description": "Snippet for ArcGIS map styles"
	},
	"ArcGIS Map": {
		"prefix": "dMapElement",
		"body": [
			"<arcgis-map id=\"map\" item-id=\"237b9584339446a0b56317b5962a4971\"></arcgis-map>"
		],
		"description": "Insert an ArcGIS map with a layer list and legend"
	},
	"Import Map": {
		"prefix": "dImportMap",
		"body": [
			"import \"@arcgis/map-components/components/arcgis-map\";"
		],
		"description": "Import the Map component"
	},
	"ArcGIS Layer List": {
		"prefix": "dLayerListElement",
		"body": [
			"<arcgis-layer-list id=\"layer-list\" position=\"top-right\"></arcgis-layer-list>"
		],
		"description": "Insert an ArcGIS layer list"
	},
	"Import Layer List": {
		"prefix": "dImportLayerList",
		"body": [
			"import \"@arcgis/map-components/components/arcgis-layer-list\";"
		],
		"description": "Import the Layer List component"
	},
	"ArcGIS Legend": {
		"prefix": "dLegendElement",
		"body": [
			"<arcgis-legend id=\"legend\" position=\"bottom-left\"></arcgis-legend>"
		],
		"description": "Insert an ArcGIS legend"
	},
	"Import Legend": {
		"prefix": "dImportLegend",
		"body": [
			"import \"@arcgis/map-components/components/arcgis-legend\";"
		],
		"description": "Import the Legend component"
	},
	"Query ArcGIS Layer List": {
		"prefix": "dLayerListQuery",
		"body": [
			"const arcgisLayerList = document.querySelector(\"#layer-list\");"
		],
		"description": "Query the ArcGIS layer list element"
	},
	"Add the listItemCreatedFunction": {
		"prefix": "dListItemCreatedFunction",
		"body": [
			"arcgisLayerList.listItemCreatedFunction = (event) => {",
			"  event.item.panel = {",
			"    content: \"legend\",",
			"    open: true,",
			"  };",
			"};"
		],
		"description": "Add the Legend to the Layer List"
	},
	"Calcite shell import": {
		"prefix": "dImportCalciteShell",
		"body": [
			"import \"@esri/calcite-components/components/calcite-shell\";"
		],
		"description": "Import the calcite shell"
	},
	"Add Feature Table": {
		"prefix": "dFeatureTableElement",
		"body": [
			"<arcgis-feature-table",
			"  id=\"feature-table\"",
			"  reference-element=\"arcgis-map\"",
			"></arcgis-feature-table>"
		],
		"description": "Add a Feature Table"
	},
	"Add selection mode": {
		"prefix": "dSelectionMode",
		"body": [
			"selection-mode=\"single\""
		],
		"description": "Add selection mode to layer list"
	},
	"Map and Feature Table Styles": {
		"prefix": "dCSSMapFeatureTableStyles",
		"body": [
			"#map,",
			"#feature-table {",
			"  height: 50%;",
			"}"
		],
		"description": "Insert styles for map and feature table"
	},
	"Import ArcGIS Feature Table": {
		"prefix": "dImportFeatureTable",
		"body": [
			"import \"@arcgis/map-components/components/arcgis-feature-table\";"
		],
		"description": "Snippet for importing ArcGIS Feature Table component"
	},
	"Query ArcGIS Feature Table": {
		"prefix": "dQueryFeatureTable",
		"body": [
			"const arcgisFeatureTable = document.querySelector(\"#feature-table\");"
		],
		"description": "Query the ArcGIS feature table element"
	},
	"Import Reactive Utils": {
		"prefix": "dImportReactiveUtils",
		"body": [
			"import * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";"
		],
		"description": "Import reactiveUtils from ArcGIS core"
	},
	"Open selected Layer List item in the Feature Table": {
		"prefix": "dWatchSelectedItems",
		"body": [
			"async function handleArcgisLayerListReady() {",
			"  await arcgisLayerList.componentOnReady();",
			"  reactiveUtils.watch(",
			"    () => arcgisLayerList.selectedItems.getItemAt(0),",
			"    (item) => {",
			"      arcgisFeatureTable.layer = item.layer;",
			"    }",
			"  );",
			"}",
			"",
			"handleArcgisLayerListReady();"
		],
		"description": "Open selected Layer List item in the Feature Table"
	}
}