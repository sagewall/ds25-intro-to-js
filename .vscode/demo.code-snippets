{
  // Place your ds25-intro-to-js workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "ArcGIS CSS Imports": {
    "prefix": "arcgisCssImports",
    "body": [
      "@import \"@arcgis/core/assets/esri/themes/light/main.css\";",
      "@import \"@arcgis/map-components/arcgis-map-components/arcgis-map-components.css\";",
      "@import \"@esri/calcite-components/calcite/calcite.css\";"
    ],
    "description": "Insert ArcGIS CSS imports"
  },

  "ArcGIS Map": {
    "prefix": "demoArcgisMap",
    "body": ["<arcgis-map basemap=\"topo-vector\"></arcgis-map>"],
    "description": "Insert an ArcGIS map with a layer list and legend"
  },

  "Import Map": {
    "prefix": "demoImportMap",
    "body": ["import \"@arcgis/map-components/components/arcgis-map\";"],
    "description": "Import the Map component"
  },

  "Map Portal Item ID": {
    "prefix": "demoMapItemId",
    "body": ["item-id=\"ef2644781da844648e8bb30ab52a02bc\""],
    "description": "Portal ItemId for a web map"
  },

  "ArcGIS Layer List": {
    "prefix": "demoLayerList",
    "body": [
      "<arcgis-layer-list",
      "  position=\"top-right\"",
      "></arcgis-layer-list>"
    ],
    "description": "Insert an ArcGIS layer list"
  },

  "ArcGIS Legend": {
    "prefix": "demoLegend",
    "body": ["<arcgis-legend position=\"bottom-left\"></arcgis-legend>"],
    "description": "Insert an ArcGIS legend"
  },

  "Query ArcGIS Layer List": {
    "prefix": "demoQueryLayerList",
    "body": [
      "const arcgisLayerList = document.querySelector(\"arcgis-layer-list\");"
    ],
    "description": "Query the ArcGIS layer list element"
  },

  "Add the Legend to the Layer List": {
    "prefix": "demoAddLegendToLayerList",
    "body": [
      "handleArcgisLayerListReady();",
      "",
      "async function handleArcgisLayerListReady() {",
      "  await arcgisLayerList.componentOnReady();",
      "  arcgisLayerList.listItemCreatedFunction = (event) => {",
      "    event.item.panel = {",
      "      content: \"legend\",",
      "      open: true,",
      "    };",
      "  };",
      "}"
    ],
    "description": "Add the Legend to the Layer List"
  },

  "Add Feature Table": {
    "prefix": "demoFeatureTable",
    "body": [
      "<arcgis-feature-table",
      "  reference-element=\"arcgis-map\"",
      "></arcgis-feature-table>"
    ],
    "description": "Add a Feature Table"
  },

  "Add selection mode": {
    "prefix": "demoSelectionMode",
    "body": ["selection-mode=\"single\""],
    "description": "Add selection mode to layer list"
  },

  "Query ArcGIS Feature Table": {
    "prefix": "demoQueryFeatureTable",
    "body": [
      "const arcgisFeatureTable = document.querySelector(\"arcgis-feature-table\");"
    ],
    "description": "Query the ArcGIS feature table element"
  },

  "Open selected Layer List item in the Feature Table": {
    "prefix": "demoWatchSelectedItems",
    "body": [
      "reactiveUtils.watch(",
      "  () => arcgisLayerList.selectedItems.getItemAt(0),",
      "  (item) => {",
      "    arcgisFeatureTable.layer = item.layer;",
      "  }",
      ");"
    ],
    "description": "Open selected Layer List item in the Feature Table"
  }
}
